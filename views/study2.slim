div#sentence-quiz-app.study-card
  div.sentence-question
    div style="position: absolute; top: 0; left: 0"
      input type="button" @click="updateSentence" value="Next"
    div.center-block
      div.sentence-word-container v-for="(word, wordIndex) of sentence"
        div v-if="word.seq && f.answers[word.seq]" @click="selectWord(word.seq)"
          div.sentence-word-tooltip :class="'answer-' + f.answers[word.seq]" = '{{f.answers[word.seq]}}'
          div.sentence-word.word-question-answered = "{{word.text}}"
        div v-else-if="word.seq"
          div.sentence-word-tooltip ?
          div.sentence-word class="word-question" @click="selectWord(word.seq)" = "{{word.text}}"
        div.sentence-word v-else="true" = "{{word.text}}"

  div v-if="f.selectedWord"
    div.answer-buttons v-if="f.answers[f.selectedWord.seq]"
      div.answer-button.yellow @click="resetAnswer" = 'Answered: {{f.answers[f.selectedWord.seq]}}; RESET'
    div.answer-buttons v-else="true"
      div.answer-button.red @click="answer('incorrect')"
        ' NO
        div.answer-details = '+ 3 + {{selectedKreb.progress.incorrect}}'
      div.answer-button.blue @click="answer('soso')"
        ' SO&#8209;SO
        div.answer-details = '+ {{selectedKreb.progress.soso}}'
      div.answer-button.green @click="answer('correct')"
        ' YES
        div.answer-details = '+ {{selectedKreb.progress.correct}}'
    word :seq="f.selectedWord.seq" :j="j" :editing="editing"

  div v-if="allAnswered && !f.selectedWord && !f.submitted"
    div.answer-buttons v-if="allAnswered"
      div.answer-button.blue @click="submit" SUBMIT
    div.center-block style="margin-top: 1em;" v-if="english" = 'Translation: {{english}}'

javascript:
  var app = new Vue({
    el: '#sentence-quiz-app',
    data: {
      sentence: [],
      english: null,
      j: {},
      f: {selectedWord: null, answers: {}, submitted: false},
      editing: false
    },
    computed: {
      allAnswered() {
        var totalWords = Object.keys(this.f.answers).length;
        var answeredWords = Object.values(this.f.answers).filter((i) => i !== null);
        if (totalWords > 0 && answeredWords.length == totalWords)
          return true;
        else
          return false;
      },
      selectedKreb() {
        if (!this.f.selectedWord) return null;

        // sentence[].seq is a string (not a number)
        var wordBase = this.sentence.find(i => i.seq == this.f.selectedWord.seq).base;
        return this.f.selectedWord.krebs.find(i => i.title === wordBase);
      }
    },
    methods: {
      selectWord(seq) {
        if (this.f.selectedWord && seq === this.f.selectedWord.seq) {
          // deselect selected word
          this.f.selectedWord = null;
        } else {
          // sentence[].seq is a string (not a number); that's why '==' is used
          this.f.selectedWord = this.j.words.find(i => i.seq == seq);
        }
      },
      answer(answerText) {
        this.f.answers[this.f.selectedWord.seq] = answerText;
        //alert(JSON.stringify(this.f.answers));
        this.f.selectedWord = null;
      },
      resetAnswer() {
        this.f.answers[this.f.selectedWord.seq] = null;
      },
      submit() {
        var app = this;
        app.f.submitted = true;
        $.ajax({
          url: "#{{path_to(:study2)}}",
          method: 'POST',
          data: {answers: this.f.answers}
        }).done(data => {
          if (data == 'ok') {
            app.updateSentence();
          } else {
            alert('error');
          }
        });
      },
      updateSentence() {
        var app = this;
        $.ajax({
          url: "#{{path_to(:api_sentence)}}",
          method: 'GET'
        }).done(data => {
          var j = JSON.parse(data);
          app.sentence = j.sentence;
          app.english = j.english;
          app.j = j.j;

          app.f.selectedWord = null;
          app.f.answers = j.sentence.reduce(function(acc,i){
            if (i.seq) acc[i.seq] = null;
            return acc;
          }, {});

          app.f.submitted = false;
        });
      }
    },
    mounted: function(){
      this.updateSentence();
    }
  });
