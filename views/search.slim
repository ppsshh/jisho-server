vue-search

- content_for :scripts
 javascript:
  const activityCategory = "search";

  var app = new Vue({
    el: '#container',
    data: {
    }
  })

  document.onclick = function(evt){
    var f = document.activeElement;

    if (f.nodeName === "TEXTAREA" || (f.nodeName === "INPUT" && f.type === "text")) {
      return;
    } else if (window.getSelection().toString() === '') {
      if (_sDevice == 'mobile') {
        var el = evt.target;
        while (el.nodeName !== 'BODY') {
          if (el.classList.contains('no-refocus')) return;
          el = el.parentElement;
        }
      }
      var field = document.querySelector('#search-app .browse-panel input');
      field.selectionStart = -1; // move cursor to the end of input field
      field.focus();
    }
  };

  document.onkeydown = function(evt) {
    evt = evt || window.event;
    if (evt.keyCode == 27) {
      document.querySelector('#search-app .browse-panel input').focus();
    }
  };

  // Mobile browsers proper height hack; Source: https://css-tricks.com/the-trick-to-viewport-units-on-mobile/
  function correctVH() {
    // First we get the viewport height and we multiple it by 1% to get a value for a vh unit
    let vh = window.innerHeight * 0.01;
    // Then we set the value in the --vh custom property to the root of the document
    document.documentElement.style.setProperty('--vh', `${vh}px`);
  };
  correctVH();
  window.addEventListener('resize', correctVH);

