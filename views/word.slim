script src="/js/jquery-ui.min.js"
div.word-card

  div.word-krebs
    - [*@word.kele, *@word.rele].each do |ele|
      div.word-kreb
        div.word-kreb-title = ele['keb'] || ele['reb']
        - if ele['pri']
          div.word-tags
          - ele['pri'].each do |k,v|
            span.word-tag = "#{k}:#{v}"

  - if @word.card_id.present?
    div.word-tags
      span.word-tag: a href=path_to(:card).with(@word.card_id) = "wk:#{@word.card.level}"

  - bullets = %w(① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ㉑ ㉒ ㉓ ㉔ ㉕ ㉖ ㉗ ㉘ ㉙ ㉚ ㉛ ㉜ ㉝ ㉞ ㉟ ㊱ ㊲ ㊳ ㊴ ㊵ ㊶ ㊷ ㊸ ㊹ ㊺ ㊻ ㊼ ㊽ ㊾ ㊿) # white circled numbers

  div
    span style="font-size: x-large" &#x1f1ec;&#x1f1e7;
    - if @word.en.length > 1
      - @word.en.each_with_index do |m2,i|
        = " #{bullets[i]} "
        = m2['gloss'].join(', ')
    - elsif @word.en.length == 1
      = ' ' + @word.en[0]['gloss'].join(', ')

  - if @word.ru
    div
      span style="font-size: x-large" &#x1f1f7;&#x1f1fa;
      - if @word.ru.length > 1
        - @word.ru.each_with_index do |m2,i|
          = " #{bullets[i]} "
          = m2['gloss'].join(', ')
      - elsif @word.ru.length == 1
        = ' ' + @word.ru[0]['gloss'].join(', ')

  table.connected-words-table
    tr
      td Contains:
      td Contained in:
    tr
      td: a> class="connected-word" v-for="sw of shortWords" :href="sw.href" {{sw.title}}
      td: a> class="connected-word" v-for="sw of longWords" :href="sw.href" {{sw.title}}
    tr
      td: input id="sub-word-autocomplete" type="text"
      td: input id="super-word-autocomplete" type="text"
    
  h2 Sentences

  div style="background: #f7f2d2; padding: 0.4em 0.6em; text-align: justify;"
    - @word.sentences.each_with_index do |s,idx|
      span> = bullets[idx] || "(#{idx})"
      span> = s.japanese
      span> style="font-size: small" = "《#{s.english}》"

  - @sentences.each_with_index do |s,idx|
    span> = bullets[idx] || "(#{idx})"
    span> = s.japanese
    span> style="font-size: small" = s.english

div style="background-color: #f7f2d2"
  == slim :sentence_form

javascript:
  $(function(){
    $('#sub-word-autocomplete').autocomplete({
      source: "#{{path_to(:autocomplete_word)}}",
      minLength: 1,
      select: function(event,ui) {
        $.ajax({
          url: "#{{path_to(:word_connect)}}",
          method: 'POST',
          data: {
            long: #{{@word.seq}},
            short: ui.item.id
          }
        }).done(data => {
          app.shortWords.push({seq: ui.item.id, title: ui.item.title, href: ui.item.href});
        });

        return false;
      }
    });

    $('#super-word-autocomplete').autocomplete({
      source: "#{{path_to(:autocomplete_word)}}",
      minLength: 1,
      select: function(event,ui) {
        $.ajax({
          url: "#{{path_to(:word_connect)}}",
          method: 'POST',
          data: {
            long: ui.item.id,
            short: #{{@word.seq}}
          }
        }).done(data => {
          app.longWords.push({seq: ui.item.id, title: ui.item.title, href: ui.item.href});
        });

        return false;
      }
    });
  });

  var app = new Vue({
    el: '.word-card',
    data: {
      shortWords: #{{@word.short_words.map{|i| {seq: i.seq, title: i.krebs[0], href: path_to(:word).with(i.seq)}}.to_json }},
      longWords: #{{@word.long_words.map{|i| {seq: i.seq, title: i.krebs[0], href: path_to(:word).with(i.seq)}}.to_json }}
    },
    methods: {

    }
  });
