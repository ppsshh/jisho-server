form method="POST" action=path_to(:drill).with(@drill.id)
  input type="hidden" name="_method" value="patch"
  input type="hidden" name="is_active" value=(@drill.is_active ? 'false' : 'true')
  h1
    = @drill.title
    input type="submit" value=(@drill.is_active ? 'Disable' : 'Enable')

/div class="elements-list" id="vue-list"
  div.elements-list-item v-for="e in elements"
    div class="element-block" :class="e.html_class || 'pristine'"
      a :href="e.href"
        div.element: span.japanese = "{{e.title}}"
        div.description = "{{e.description}}"

input class="word-add-autocomplete" type="text" placeholder="Add short"
- percent = (@elements.filter{|i| i[:html_class] != :pristine}.count / @elements.length.to_f * 100).round(1) rescue 0
- percent2 = (@elements.filter{|i| i[:html_class] == :master || i[:html_class] == :burned}.count / @elements.length.to_f * 100).round(1) rescue 0
div.hr-title : span = "Kanji (#{percent}% / #{percent2}%)"

div class="elements-list"
  - @elements.each do |e|
    div.elements-list-item : div class="element-block #{e[:html_class]}" : a href=e[:href] : div.element : span.japanese = e[:title]

div.hr-title : span Sentences
ul
  - @drill.sentences.order(created_at: :desc).each do |sentence|
    li
      span> style="opacity: .5; font-size: .8em" = "##{sentence.id}"
      - sentence.structure.each do |s|
        - if s['seq']
          a href=path_to(:word).with(s['seq']) = s['text']
        - else
          = s['text']
      span style="opacity: 0.5" = sentence.english

javascript:
  var app = new Vue({
    el: '#vue-list',
    data: {
      elements: #{{@elements.to_json}}
    }
  });

  var autocompleteSelect = function(event, ui) {
    // ui.item.id, ui.item.title, ui.item.href

    $.ajax({
      url: "#{{path_to(:drill_add_word)}}",
      method: 'POST',
      data: {drill_id: #{{@drill.id}}, id: ui.item.id}
    }).done(data => {
      console.log(data);
      $(this).val('');
    });

    return false;
  };

  $('.word-add-autocomplete').autocomplete({
    source: "#{{path_to(:api_word_autocomplete)}}",
    minLength: 1,
    select: autocompleteSelect
  });

