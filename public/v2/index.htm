<!DOCTYPE html><html><head>
  <meta charset="utf-8" />
  <title>Wakame v2.0 prototype</title>
  <link href="/v2/main.css" rel="stylesheet" type="text/css" />
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head><body>
  <div id="app">
    <h2>Word's card</h2>

    <h1><ruby><rb>仏像</rb><rt>ぶつぞう</rt></h1>

    <table>
      <tr v-for="sentence in sentences" :class="Math.min(...sentence.words.map(i=>words[i]).map(i=>i.l)) < 0 ? 'sentence-locked' : ''">
        <td>{{sentence.jp}}<br><span class="english">{{sentence.en}}</span></td>
        <td><div v-for="word in sentence.words" class="card" :class="`card-${words[word].l}`">{{word}}</div></td>
      </tr>
    </table>

    <hr>

    <h2>Quiz</h2>

    <h1>
      <span v-for="(word, wordIndex) of question">
        <span v-if="word.w !== undefined" class="question-word" :id="`word-${wordIndex}`" @click="checkAnswer(wordIndex)" :class="word.a ? `answered-${word.a}ly` : ''">{{word.d}}</span>
        <span v-else style="font-weight: normal">{{word.d}}</span>
      </span>
    </h1>

    <div v-if="answering !== null">
        Answer:<br>
        <b>Reading:</b> {{words[question[answering].w].r}}<br>
        <b>Meaning:</b> {{words[question[answering].w].e}}<br>
        Correct?
        <input type="button" value="YES" @click="answerCorrect">
        <input type="button" value="NO" @click="answerIncorrect">
    </div>

    <div v-if="question.filter(i=>i.w!==undefined).filter(i=>i.a===undefined).length === 0">
      <input type="button" value="SUBMIT">
    </div>

    <hr>
    <h2>New sentence</h2>

    <textarea @select="newSentencePartSelected">石で使った仏像
A stone Buddhist statue</textarea>
    <div class='new-sentence' @select="console.log('select')">
      <ruby v-for="(substr, sIdx) of newSentence" :class="substr.c ? 'question-word' : ''" @click="newSentenceResetPart(sIdx)"><rb>{{substr.t}}<rb><rt v-if="substr.c && words[substr.t]">{{words[substr.t].r}}</rt><rtc v-if="substr.c && words[substr.t]">{{words[substr.t].e}}</rtc></ruby>
    </div>
    <p>{{JSON.stringify(newSentence.map(i=>i.t))}}</p>
  </div>

<script>
  var app = new Vue({
    el: '#app',
    data: {
      words: {
        '金':{l:2,e:'gold',r:'きん'},
        '色':{l:3,e:'color',r:'いろ'},
        '仏像':{l:0,e:'statue of buddha',r:'ぶつぞう'},
        '古い':{l:3,e:'old',r:'ふるい'},
        '石':{l:4,e:'stone',r:'いし'},
        '使う':{l:2,e:'to use',r:'つかう'},
        '国宝':{l:1,e:'national treasure',r:'こくほう'},
        '螺髪':{l:-1,e:'spiral',r:'らほつ'},
        '頭髪':{l:-1,e:'hair on head',r:'とうはつ'},
        '使った':{e:'to use',r:'つかった'},
        '使っ':{e:'to use',r:'つかっ'}
      },
      sentences: [
        {jp: "金色の仏像", en: "A gold coloured image of Buddha", words: '金 色 仏像'.split(' ')},
        {jp: "古い仏像", en: "An old statue in the image of Buddha", words: '古い 仏像'.split(' ')},
        {jp: "石で使った仏像", en: "A stone Buddhist statue", words: "石 使う 仏像".split(' ')},
        {jp: "この仏像は国宝です", en: "This Buddha statue is a national treasure", words: "仏像 国宝".split(' ')},
        {jp: "螺髪という,仏像の頭髪", en: "The hair of an image of Buddha, called 'spiral'", words: "螺髪 頭髪".split(' ')}
      ],
      question: [{d:'石',w:'石'},{d:'で'},{d:'使った',w:'使う'},{d:'仏像',w:'仏像'}],
      answering: null,
      newSentence: [{t:'石で使った仏像'}]
    },
    methods: {
      hideAnswering() {
        var word = document.querySelectorAll(`#word-${this.answering}`)[0];
        word.classList.remove('answering');
        this.answering = null;
      },
      checkAnswer(wordIndex) {
        if (this.answering === wordIndex) {
            this.hideAnswering();
        } else {
            if (this.answering !== null) this.hideAnswering();

            var word = document.querySelectorAll(`#word-${wordIndex}`)[0];
            word.classList.add('answering');
            this.answering = wordIndex;
        }
      },
      answerCorrect() {
        var word = document.querySelectorAll(`#word-${this.answering}`)[0];
        this.$set(this.question[this.answering], 'a', 'correct');
        this.hideAnswering();
      },
      answerIncorrect() {
        var word = document.querySelectorAll(`#word-${this.answering}`)[0];
        this.$set(this.question[this.answering], 'a', 'incorrect');
        this.hideAnswering();
      },
      newSentencePartSelected() {
        var textarea = document.querySelectorAll('textarea')[0];
        var start = textarea.selectionStart;
        var finish = textarea.selectionEnd;
        if (start === finish) return;

        var result = [];
        var i = 0;
        for (substr of this.newSentence) {
            if (i <= start && i + substr.t.length >= finish) {
                if (i !== start) result.push({t:substr.t.substring(0, start - i)});
                result.push({t:substr.t.substring(start - i, finish - i), c:true});
                if (i + substr.t.length !== finish) result.push({t:substr.t.substring(finish - i, substr.t.length)});
            } else {
                result.push(substr);
            }
            i += substr.t.length;
        }
        textarea.selectionStart = textarea.selectionEnd = 0;
        this.newSentence = result;
      },
      newSentenceResetPart(partIdx) {
        var result = [];
        var tmpString = '';
        delete this.newSentence[partIdx].c;
        for (part of this.newSentence) {
          if (part.c !== true) {
            tmpString += part.t;
          } else {
            if (tmpString !== '') {
              result.push({t:tmpString});
              tmpString = '';
            }
            result.push(part);
          }
        }

        if (tmpString !== '') {
          result.push({t:tmpString});
          tmpString = '';
        }

        this.newSentence = result;
      }
    }
  });
</script>
</body></head>
